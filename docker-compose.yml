services:
  db:
    build:
      context: ./db
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-auth_system}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      args:
        DEV_BACKEND_PORT: ${DEV_BACKEND_PORT}
    ports:
      - "3003:${DEV_BACKEND_PORT:-3001}"
    environment:
      NODE_ENV: development
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-auth_system}
      POSTGRES_HOST: db
      DEV_BACKEND_PORT: ${DEV_BACKEND_PORT:-3001}
      DEV_FRONTEND_PORT: ${DEV_FRONTEND_PORT:-3000}
      SEED_SCHEMA: ${SEED_SCHEMA:-client_template}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      SESSION_SECRET: ${SESSION_SECRET:-your-session-secret}
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      args:
        DEV_FRONTEND_PORT: ${DEV_FRONTEND_PORT}
    ports:
      - "${DEV_FRONTEND_PORT:-3000}:${DEV_FRONTEND_PORT:-3000}"
    environment:
      NODE_ENV: development
      DEV_FRONTEND_PORT: ${DEV_FRONTEND_PORT:-3000}
      DEV_BACKEND_PORT: 3003
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 